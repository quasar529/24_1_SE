pipeline {
    agent any

	environment {
        TEST_RESULTS_DIR = "test-results"
    }
	
    stages {
        stage('Checkout') {
            steps {
                // 소스코드를 체크아웃
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Java 파일들을 컴파일하여 생성된 클래스 파일을 classes 디렉토리에 저장
                sh 'mkdir -p classes'
                sh 'javac -encoding UTF-8 -cp "SE_Mission/libs/*" -d classes SE_Mission/src/*.java'
				
            }
        }

        stage('Test') {
            steps {
                // JUnit 5 테스트 실행을 위한 classpath 설정
                script {
                    def classpath = "SE_Mission/libs/junit-platform-console-standalone-1.7.1.jar"
                    // JUnit 5 테스트 실행
                    sh "mkdir -p ${TEST_RESULTS_DIR}"
                    sh "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath > ${TEST_RESULTS_DIR}/test_results.txt"
                    sh "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --select-module=BookPerformanceTest > ${TEST_RESULTS_DIR}/performance_test_results.txt" 
                    //sh "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath --reports-dir=${TEST_RESULTS_DIR} > test_results.txt"
                }
            }
        }
        
    }

    post {
        always {
            archiveArtifacts "${TEST_RESULTS_DIR}/*"
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
